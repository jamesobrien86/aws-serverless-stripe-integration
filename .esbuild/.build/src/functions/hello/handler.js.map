{
  "version": 3,
  "sources": ["../../../../../node_modules/@middy/core/index.js", "../../../../../node_modules/@middy/util/index.js", "../../../../../node_modules/@middy/http-json-body-parser/index.js", "../../../../../src/functions/hello/handler.ts", "../../../../../src/libs/apiGateway.ts", "../../../../../src/libs/lambda.ts"],
  "sourcesContent": ["const middy = (baseHandler = () => {}, plugin) => {\n  plugin?.beforePrefetch?.()\n  const beforeMiddlewares = []\n  const afterMiddlewares = []\n  const onErrorMiddlewares = []\n\n  const instance = (event = {}, context = {}) => {\n    plugin?.requestStart?.()\n    const request = {\n      event,\n      context,\n      response: undefined,\n      error: undefined,\n      internal: {}\n    }\n\n    return runRequest(\n      request,\n      [...beforeMiddlewares],\n      baseHandler,\n      [...afterMiddlewares],\n      [...onErrorMiddlewares],\n      plugin\n    )\n  }\n\n  instance.use = (middlewares) => {\n    if (Array.isArray(middlewares)) {\n      for (const middleware of middlewares) {\n        instance.applyMiddleware(middleware)\n      }\n      return instance\n    }\n    return instance.applyMiddleware(middlewares)\n  }\n\n  instance.applyMiddleware = (middleware) => {\n    const { before, after, onError } = middleware\n\n    if (!before && !after && !onError) {\n      throw new Error(\n        'Middleware must be an object containing at least one key among \"before\", \"after\", \"onError\"'\n      )\n    }\n\n    if (before) instance.before(before)\n    if (after) instance.after(after)\n    if (onError) instance.onError(onError)\n\n    return instance\n  }\n\n  // Inline Middlewares\n  instance.before = (beforeMiddleware) => {\n    beforeMiddlewares.push(beforeMiddleware)\n    return instance\n  }\n  instance.after = (afterMiddleware) => {\n    afterMiddlewares.unshift(afterMiddleware)\n    return instance\n  }\n  instance.onError = (onErrorMiddleware) => {\n    onErrorMiddlewares.push(onErrorMiddleware)\n    return instance\n  }\n\n  instance.__middlewares = {\n    before: beforeMiddlewares,\n    after: afterMiddlewares,\n    onError: onErrorMiddlewares\n  }\n\n  return instance\n}\n\nconst runRequest = async (\n  request,\n  beforeMiddlewares,\n  baseHandler,\n  afterMiddlewares,\n  onErrorMiddlewares,\n  plugin\n) => {\n  try {\n    await runMiddlewares(request, beforeMiddlewares, plugin)\n    // Check if before stack hasn't exit early\n    if (request.response === undefined) {\n      plugin?.beforeHandler?.()\n      request.response = await baseHandler(request.event, request.context)\n      plugin?.afterHandler?.()\n      await runMiddlewares(request, afterMiddlewares, plugin)\n    }\n  } catch (e) {\n    // Reset response changes made by after stack before error thrown\n    request.response = undefined\n    request.error = e\n    try {\n      await runMiddlewares(request, onErrorMiddlewares, plugin)\n    } catch (e) {\n      // Save error that wasn't handled\n      e.originalError = request.error\n      request.error = e\n\n      throw request.error\n    }\n    // Catch if onError stack hasn't handled the error\n    if (request.response === undefined) throw request.error\n  } finally {\n    await plugin?.requestEnd?.(request)\n  }\n\n  return request.response\n}\n\nconst runMiddlewares = async (request, middlewares, plugin) => {\n  for (const nextMiddleware of middlewares) {\n    plugin?.beforeMiddleware?.(nextMiddleware?.name)\n    const res = await nextMiddleware?.(request)\n    plugin?.afterMiddleware?.(nextMiddleware?.name)\n    // short circuit chaining and respond early\n    if (res !== undefined) {\n      request.response = res\n      return\n    }\n  }\n}\n\nmodule.exports = middy\n", "const { Agent } = require('https')\n// const { NodeHttpHandler } = require('@aws-sdk/node-http-handler') // aws-sdk v3\n\nconst awsClientDefaultOptions = {\n  // AWS SDK v3\n  // Docs: https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/enforcing-tls.html\n  /* requestHandler: new NodeHttpHandler({\n    httpsAgent: new Agent(\n      {\n        secureProtocol: 'TLSv1_2_method'\n      }\n    )\n  }) */\n  // Docs: https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/enforcing-tls.html\n  httpOptions: {\n    agent: new Agent({\n      secureProtocol: 'TLSv1_2_method'\n    })\n  }\n}\n\nconst createPrefetchClient = (options) => {\n  const awsClientOptions = {\n    ...awsClientDefaultOptions,\n    ...options.awsClientOptions\n  }\n  const client = new options.AwsClient(awsClientOptions)\n\n  // AWS XRay\n  if (options.awsClientCapture) {\n    return options.awsClientCapture(client)\n  }\n\n  return client\n}\n\nconst createClient = async (options, request) => {\n  let awsClientCredentials = {}\n\n  // Role Credentials\n  if (options.awsClientAssumeRole) {\n    if (!request) throw new Error('Request required when assuming role')\n    awsClientCredentials = await getInternal(\n      { credentials: options.awsClientAssumeRole },\n      request\n    )\n  }\n\n  awsClientCredentials = {\n    ...awsClientCredentials,\n    ...options.awsClientOptions\n  }\n\n  return createPrefetchClient({\n    ...options,\n    awsClientOptions: awsClientCredentials\n  })\n}\n\nconst canPrefetch = (options) => {\n  return !options?.awsClientAssumeRole && !options?.disablePrefetch\n}\n\n// Internal Context\nconst getInternal = async (variables, request) => {\n  if (!variables || !request) return {}\n  let keys = []\n  let values = []\n  if (variables === true) {\n    keys = values = Object.keys(request.internal)\n  } else if (typeof variables === 'string') {\n    keys = values = [variables]\n  } else if (Array.isArray(variables)) {\n    keys = values = variables\n  } else if (typeof variables === 'object') {\n    keys = Object.keys(variables)\n    values = Object.values(variables)\n  }\n  const promises = []\n  for (const internalKey of values) {\n    // 'internal.key.sub_value' -> { [key]: internal.key.sub_value }\n    const pathOptionKey = internalKey.split('.')\n    const rootOptionKey = pathOptionKey.shift()\n    let valuePromise = request.internal[rootOptionKey]\n    if (typeof valuePromise?.then !== 'function') {\n      valuePromise = Promise.resolve(valuePromise)\n    }\n    promises.push(\n      valuePromise.then((value) =>\n        pathOptionKey.reduce((p, c) => p?.[c], value)\n      )\n    )\n  }\n  // ensure promise has resolved by the time it's needed\n  // If one of the promises throws it will bubble up to @middy/core\n  values = await Promise.allSettled(promises)\n  const errors = values\n    .filter((res) => res.status === 'rejected')\n    .map((res) => res.reason.message)\n  if (errors.length) throw new Error(JSON.stringify(errors))\n  return keys.reduce(\n    (obj, key, index) => ({ ...obj, [sanitizeKey(key)]: values[index].value }),\n    {}\n  )\n}\nconst sanitizeKeyPrefixLeadingNumber = /^([0-9])/\nconst sanitizeKeyRemoveDisallowedChar = /[^a-zA-Z0-9]+/g\nconst sanitizeKey = (key) => {\n  return key\n    .replace(sanitizeKeyPrefixLeadingNumber, '_$1')\n    .replace(sanitizeKeyRemoveDisallowedChar, '_')\n}\n\n// fetch Cache\nconst cache = {} // key: { value:{fetchKey:Promise}, expiry }\nconst processCache = (options, fetch = () => undefined, request) => {\n  const { cacheExpiry, cacheKey } = options\n  if (cacheExpiry) {\n    const cached = getCache(cacheKey)\n    const unexpired = cached && (cacheExpiry < 0 || cached.expiry > Date.now())\n\n    if (unexpired && cached.modified) {\n      const value = fetch(request, cached.value)\n      cache[cacheKey] = {\n        value: { ...cached.value, ...value },\n        expiry: cached.expiry\n      }\n      return cache[cacheKey]\n    }\n    if (unexpired) {\n      return { ...cached, cache: true }\n    }\n  }\n  const value = fetch(request)\n\n  const expiry = Date.now() + cacheExpiry\n  if (cacheExpiry) {\n    cache[cacheKey] = { value, expiry }\n  }\n  return { value, expiry }\n}\n\nconst getCache = (key) => {\n  return cache[key]\n}\n\n// Used to remove parts of a cache\nconst modifyCache = (cacheKey, value) => {\n  if (!cache[cacheKey]) return\n  cache[cacheKey] = { ...cache[cacheKey], value, modified: true }\n}\n\nconst clearCache = (keys = null) => {\n  keys = keys ?? Object.keys(cache)\n  if (!Array.isArray(keys)) keys = [keys]\n  for (const cacheKey of keys) {\n    cache[cacheKey] = undefined\n  }\n}\n\nconst jsonSafeParse = (string, reviver) => {\n  if (typeof string !== 'string') return string\n  const firstChar = string[0]\n  if (firstChar !== '{' && firstChar !== '[' && firstChar !== '\"') return string\n  try {\n    return JSON.parse(string, reviver)\n  } catch (e) {}\n\n  return string\n}\n\nconst normalizeHttpResponse = (response) => {\n  // May require updating to catch other types\n  if (response === undefined) {\n    response = {}\n  } else if (\n    Array.isArray(response) ||\n    typeof response !== 'object' ||\n    response === null\n  ) {\n    response = { body: response }\n  }\n  response.headers = response?.headers ?? {}\n  return response\n}\n\n// smaller version of `http-errors`\nconst statuses = require('./codes.json')\nconst { inherits } = require('util')\n\nconst createErrorRegexp = /[^a-zA-Z]/g\nconst createError = (code, message, properties = {}) => {\n  const name = statuses[code].replace(createErrorRegexp, '')\n  const className = name.substr(-5) !== 'Error' ? name + 'Error' : name\n\n  function HttpError (message) {\n    // create the error object\n    const msg = message ?? statuses[code]\n    const err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, HttpError)\n\n    // adjust the [[Prototype]]\n    Object.setPrototypeOf(err, HttpError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(HttpError, Error)\n  const desc = Object.getOwnPropertyDescriptor(HttpError, 'name')\n  desc.value = className\n  Object.defineProperty(HttpError, 'name', desc)\n\n  Object.assign(HttpError.prototype, {\n    status: code,\n    statusCode: code,\n    expose: code < 500\n  }, properties)\n\n  return new HttpError(message)\n}\n\nmodule.exports = {\n  createPrefetchClient,\n  createClient,\n  canPrefetch,\n  getInternal,\n  sanitizeKey,\n  processCache,\n  getCache,\n  modifyCache,\n  clearCache,\n  jsonSafeParse,\n  normalizeHttpResponse,\n  createError\n}\n", "const mimePattern = /^application\\/(.+\\+)?json(;.*)?$/\n\nconst defaults = {\n  reviver: undefined\n}\n\nconst httpJsonBodyParserMiddleware = (opts = {}) => {\n  const options = { ...defaults, ...opts }\n  const httpJsonBodyParserMiddlewareBefore = async (request) => {\n    const { headers, body } = request.event\n\n    const contentTypeHeader =\n      headers?.['Content-Type'] ?? headers?.['content-type']\n\n    if (mimePattern.test(contentTypeHeader)) {\n      try {\n        const data = request.event.isBase64Encoded\n          ? Buffer.from(body, 'base64').toString()\n          : body\n\n        request.event.rawBody = body\n        request.event.body = JSON.parse(data, options.reviver)\n      } catch (err) {\n        const { createError } = require('@middy/util')\n        // UnprocessableEntity\n        throw createError(422, 'Content type defined as JSON but an invalid JSON was provided')\n      }\n    }\n  }\n\n  return {\n    before: httpJsonBodyParserMiddlewareBefore\n  }\n}\nmodule.exports = httpJsonBodyParserMiddleware\n", "import type { ValidatedEventAPIGatewayProxyEvent } from \"@libs/apiGateway\";\nimport { formatJSONResponse } from \"@libs/apiGateway\";\nimport { middyfy } from \"@libs/lambda\";\n\nimport schema from \"./schema\";\n\nconst hello: ValidatedEventAPIGatewayProxyEvent<typeof schema> = async (\n\tevent\n) => {\n\treturn formatJSONResponse({\n\t\tmessage: `Hello welcome to the exciting Serverless world!`,\n\t\tevent,\n\t});\n};\n\nexport const main = middyfy(hello);\n", "import type { APIGatewayProxyEvent, APIGatewayProxyResult, Handler } from \"aws-lambda\"\nimport type { FromSchema } from \"json-schema-to-ts\";\n\ntype ValidatedAPIGatewayProxyEvent<S> = Omit<APIGatewayProxyEvent, 'body'> & { body: FromSchema<S> }\nexport type ValidatedEventAPIGatewayProxyEvent<S> = Handler<ValidatedAPIGatewayProxyEvent<S>, APIGatewayProxyResult>\n\nexport const formatJSONResponse = (response: Record<string, unknown>) => {\n  return {\n    statusCode: 200,\n    body: JSON.stringify(response)\n  }\n}\n", "import middy from \"@middy/core\"\nimport middyJsonBodyParser from \"@middy/http-json-body-parser\"\n\nexport const middyfy = (handler) => {\n  return middy(handler).use(middyJsonBodyParser())\n}\n"],
  "mappings": "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",
  "names": []
}
